name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

jobs:
  update_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Update Issue
        run: |
          gh issue list -m Release creation v${{ github.event.inputs.release_version }}
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # testing and linting before release
#  testing:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Code testing
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20.14'
#      - run: npm ci
#      - run: npm run test
#
#  linting:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Code testing
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20.14'
#      - run: npm ci
#      - run: npm run lint
#
#  # fix release
#  fix-release-branch:
#    runs-on: ubuntu-latest
#    needs:
#      - testing
#      - linting
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Create release branch
#        run: |
#          git config --global user.name "github-actions"
#          git config --global user.email "github-actions@github.com"
#          git checkout -b releases/${{ github.event.inputs.release_version }}
#      - name: Setup docker
#        uses: docker/setup-buildx-action@v3
#      - name: Login Container Y Registry
#        run: echo ${{ secrets.YANDEX_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
#      - name: Build and push Docker image
#        run: |
#          docker build -t cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
#          docker tag cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
#          docker push cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
#          docker push cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
